{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"dBlq2nwi8QnS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1651085943990,"user_tz":-120,"elapsed":102441,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"}},"outputId":"d01ee050-e902-41f8-93f8-b7660566ab66"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting torch==1.10.0\n","  Downloading torch-1.10.0-cp37-cp37m-manylinux1_x86_64.whl (881.9 MB)\n","\u001b[K     |██████████████████████████████▎ | 834.1 MB 1.2 MB/s eta 0:00:40tcmalloc: large alloc 1147494400 bytes == 0x6660c000 @  0x7f39b4ad6615 0x592b76 0x4df71e 0x59afff 0x515655 0x549576 0x593fce 0x548ae9 0x51566f 0x549576 0x593fce 0x548ae9 0x5127f1 0x598e3b 0x511f68 0x598e3b 0x511f68 0x598e3b 0x511f68 0x4bc98a 0x532e76 0x594b72 0x515600 0x549576 0x593fce 0x548ae9 0x5127f1 0x549576 0x593fce 0x5118f8 0x593dd7\n","\u001b[K     |████████████████████████████████| 881.9 MB 19 kB/s \n","\u001b[?25hRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch==1.10.0) (4.2.0)\n","Installing collected packages: torch\n","  Attempting uninstall: torch\n","    Found existing installation: torch 1.11.0+cu113\n","    Uninstalling torch-1.11.0+cu113:\n","      Successfully uninstalled torch-1.11.0+cu113\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","torchvision 0.12.0+cu113 requires torch==1.11.0, but you have torch 1.10.0 which is incompatible.\n","torchtext 0.12.0 requires torch==1.11.0, but you have torch 1.10.0 which is incompatible.\n","torchaudio 0.11.0+cu113 requires torch==1.11.0, but you have torch 1.10.0 which is incompatible.\u001b[0m\n","Successfully installed torch-1.10.0\n"]}],"source":["!pip install torch==1.10.0"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ApF7u0o0MNvn","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1651086030837,"user_tz":-120,"elapsed":86865,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"}},"outputId":"5e0a981b-288f-44a9-f09b-48dea2364c64"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting EasyOCR\n","  Downloading easyocr-1.4.2-py3-none-any.whl (70.8 MB)\n","\u001b[K     |████████████████████████████████| 70.8 MB 17 kB/s \n","\u001b[?25hCollecting opencv-python-headless<=4.5.4.60\n","  Downloading opencv_python_headless-4.5.4.60-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (47.6 MB)\n","\u001b[K     |████████████████████████████████| 47.6 MB 11.9 MB/s \n","\u001b[?25hRequirement already satisfied: Pillow in /usr/local/lib/python3.7/dist-packages (from EasyOCR) (7.1.2)\n","Requirement already satisfied: torchvision>=0.5 in /usr/local/lib/python3.7/dist-packages (from EasyOCR) (0.12.0+cu113)\n","Requirement already satisfied: PyYAML in /usr/local/lib/python3.7/dist-packages (from EasyOCR) (3.13)\n","Requirement already satisfied: scikit-image in /usr/local/lib/python3.7/dist-packages (from EasyOCR) (0.18.3)\n","Requirement already satisfied: torch in /usr/local/lib/python3.7/dist-packages (from EasyOCR) (1.10.0)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from EasyOCR) (1.4.1)\n","Collecting python-bidi\n","  Downloading python_bidi-0.4.2-py2.py3-none-any.whl (30 kB)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from EasyOCR) (1.21.6)\n","Collecting torch\n","  Downloading torch-1.11.0-cp37-cp37m-manylinux1_x86_64.whl (750.6 MB)\n","\u001b[K     |████████████████████████████████| 750.6 MB 11 kB/s \n","\u001b[?25hRequirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from torchvision>=0.5->EasyOCR) (2.23.0)\n","Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torchvision>=0.5->EasyOCR) (4.2.0)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from python-bidi->EasyOCR) (1.15.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->torchvision>=0.5->EasyOCR) (2021.10.8)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->torchvision>=0.5->EasyOCR) (2.10)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->torchvision>=0.5->EasyOCR) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->torchvision>=0.5->EasyOCR) (3.0.4)\n","Requirement already satisfied: imageio>=2.3.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image->EasyOCR) (2.4.1)\n","Requirement already satisfied: PyWavelets>=1.1.1 in /usr/local/lib/python3.7/dist-packages (from scikit-image->EasyOCR) (1.3.0)\n","Requirement already satisfied: networkx>=2.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image->EasyOCR) (2.6.3)\n","Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.7/dist-packages (from scikit-image->EasyOCR) (2021.11.2)\n","Requirement already satisfied: matplotlib!=3.0.0,>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-image->EasyOCR) (3.2.2)\n","Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->EasyOCR) (2.8.2)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->EasyOCR) (0.11.0)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->EasyOCR) (3.0.8)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib!=3.0.0,>=2.0.0->scikit-image->EasyOCR) (1.4.2)\n","Installing collected packages: torch, python-bidi, opencv-python-headless, EasyOCR\n","  Attempting uninstall: torch\n","    Found existing installation: torch 1.10.0\n","    Uninstalling torch-1.10.0:\n","      Successfully uninstalled torch-1.10.0\n","Successfully installed EasyOCR-1.4.2 opencv-python-headless-4.5.4.60 python-bidi-0.4.2 torch-1.11.0\n","Collecting opencv-python-headless==4.1.2.30\n","  Downloading opencv_python_headless-4.1.2.30-cp37-cp37m-manylinux1_x86_64.whl (21.8 MB)\n","\u001b[K     |████████████████████████████████| 21.8 MB 6.8 MB/s \n","\u001b[?25hRequirement already satisfied: numpy>=1.14.5 in /usr/local/lib/python3.7/dist-packages (from opencv-python-headless==4.1.2.30) (1.21.6)\n","Installing collected packages: opencv-python-headless\n","  Attempting uninstall: opencv-python-headless\n","    Found existing installation: opencv-python-headless 4.5.4.60\n","    Uninstalling opencv-python-headless-4.5.4.60:\n","      Successfully uninstalled opencv-python-headless-4.5.4.60\n","Successfully installed opencv-python-headless-4.1.2.30\n","Collecting PyYAML\n","  Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n","\u001b[K     |████████████████████████████████| 596 kB 9.9 MB/s \n","\u001b[?25hInstalling collected packages: PyYAML\n","Successfully installed PyYAML-6.0\n","Cloning into 'EasyOCR'...\n","remote: Enumerating objects: 2138, done.\u001b[K\n","remote: Total 2138 (delta 0), reused 0 (delta 0), pack-reused 2138\u001b[K\n","Receiving objects: 100% (2138/2138), 148.04 MiB | 22.75 MiB/s, done.\n","Resolving deltas: 100% (1317/1317), done.\n","Checking out files: 100% (225/225), done.\n"]}],"source":["!pip install EasyOCR\n","!pip install opencv-python-headless==4.1.2.30\n","!pip install --ignore-installed PyYAML\n","!git clone https://github.com/JaidedAI/EasyOCR.git"]},{"cell_type":"code","source":["%cd /content/EasyOCR/trainer"],"metadata":{"id":"2dtzOf_1lo_d","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1651086030838,"user_tz":-120,"elapsed":24,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"}},"outputId":"ceae9e14-fd26-41d2-cbfa-ab3d350d780f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/EasyOCR/trainer\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6015,"status":"ok","timestamp":1651086036842,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"},"user_tz":-120},"id":"375MnnCBS6qe","outputId":"9006d0ad-973a-4499-b947-9aa78b02927d"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/torchvision/io/image.py:13: UserWarning: Failed to load image Python extension: libtorch_cuda_cu.so: cannot open shared object file: No such file or directory\n","  warn(f\"Failed to load image Python extension: {e}\")\n"]},{"output_type":"stream","name":"stdout","text":["Collecting attrdict\n","  Downloading attrdict-2.0.1-py2.py3-none-any.whl (9.9 kB)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from attrdict) (1.15.0)\n","Installing collected packages: attrdict\n","Successfully installed attrdict-2.0.1\n"]}],"source":["import os\n","import torch.backends.cudnn as cudnn\n","import yaml\n","from train import train\n","!pip install attrdict\n","from attrdict import AttrDict\n","import pandas as pd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"JSbYXsJA0s6V","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1651086036843,"user_tz":-120,"elapsed":26,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"}},"outputId":"4f90f549-dafa-4e2d-e159-b8d9085d2008"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/EasyOCR/trainer/all_data\n"]}],"source":["%cd /content/EasyOCR/trainer/all_data"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6TUl7ff5Tqt0"},"outputs":[],"source":["cudnn.benchmark = True\n","cudnn.deterministic = False"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WaLw9x7HTwYo"},"outputs":[],"source":["def get_config(file_path):\n","    with open(file_path, 'r', encoding=\"utf8\") as stream:\n","        opt = yaml.safe_load(stream)\n","    opt = AttrDict(opt)\n","    if opt.lang_char == 'None':\n","        characters = ''\n","        for data in opt['select_data'].split('-'):\n","            csv_path = os.path.join(opt['train_data'], data, 'labels.csv')\n","            df = pd.read_csv(csv_path, sep='^([^,]+),', engine='python', usecols=['filename', 'words'], keep_default_na=False)\n","            all_char = ''.join(df['words'])\n","            characters += ''.join(set(all_char))\n","        characters = sorted(set(characters))\n","        opt.character= ''.join(characters)\n","    else:\n","        opt.character = opt.number + opt.symbol + opt.lang_char\n","    os.makedirs(f'./saved_models/{opt.experiment_name}', exist_ok=True)\n","    return opt"]},{"cell_type":"code","source":["!git clone https://github.com/JaidedAI/EasyOCR.git"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dlxYBm2yomsM","executionInfo":{"status":"ok","timestamp":1651086050181,"user_tz":-120,"elapsed":13349,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"}},"outputId":"fe211a9f-269d-4434-da03-f6fbd61a12b0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'EasyOCR'...\n","remote: Enumerating objects: 2138, done.\u001b[K\n","remote: Total 2138 (delta 0), reused 0 (delta 0), pack-reused 2138\u001b[K\n","Receiving objects: 100% (2138/2138), 147.89 MiB | 21.15 MiB/s, done.\n","Resolving deltas: 100% (1317/1317), done.\n","Checking out files: 100% (225/225), done.\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xKXldhGAEeHA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1651086050182,"user_tz":-120,"elapsed":59,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"}},"outputId":"4f85a26b-8bdd-4ec4-b416-dd7f66b1f966"},"outputs":[{"output_type":"stream","name":"stdout","text":["unzip:  cannot find or open /content/EasyOCR/trainer/all_data/en_train_filtered.zip, /content/EasyOCR/trainer/all_data/en_train_filtered.zip.zip or /content/EasyOCR/trainer/all_data/en_train_filtered.zip.ZIP.\n"]}],"source":["!unzip \"/content/EasyOCR/trainer/all_data/en_train_filtered.zip\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"eR7jhni-BUvQ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1651086050182,"user_tz":-120,"elapsed":48,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"}},"outputId":"9e78606d-0853-44a6-d721-4330dcac68f6"},"outputs":[{"output_type":"stream","name":"stdout","text":["unzip:  cannot find or open /content/EasyOCR/trainer/all_data/en_val.zip, /content/EasyOCR/trainer/all_data/en_val.zip.zip or /content/EasyOCR/trainer/all_data/en_val.zip.ZIP.\n"]}],"source":["!unzip \"/content/EasyOCR/trainer/all_data/en_val.zip\""]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":39,"status":"ok","timestamp":1651086050183,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"},"user_tz":-120},"id":"jioW089aivW9","outputId":"e3c9365c-5dda-4985-9cb6-c7cfbfdd7fc7"},"outputs":[{"output_type":"stream","name":"stdout","text":["/content/EasyOCR/trainer\n"]}],"source":["%cd /content/EasyOCR/trainer"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zMPIKld9Tx-z"},"outputs":[],"source":["opt = get_config(\"config_files/en_filtered_config.yaml\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sztJ8FbIHcRl"},"outputs":[],"source":["#opt.character = \"0123456789 АаБбВвГгДдЕеЁёЗзЖжИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7sO8m4nMG608","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"error","timestamp":1651086050890,"user_tz":-120,"elapsed":378,"user":{"displayName":"Abounamer Ayoub","userId":"17960890537128960360"}},"outputId":"74b71314-d1b4-4728-f673-218de91b130f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Filtering the images containing characters which are not in opt.character\n","Filtering the images whose label is longer than opt.batch_max_length\n","--------------------------------------------------------------------------------\n","dataset_root: all_data\n","opt.select_data: ('en_train_filtered',)\n","opt.batch_ratio: ('1',)\n","--------------------------------------------------------------------------------\n","dataset_root:    all_data\t dataset: en_train_filtered\n"]},{"output_type":"error","ename":"AssertionError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAssertionError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-52cfe7f3f27e>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mtrain\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mamp\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/content/EasyOCR/trainer/train.py\u001b[0m in \u001b[0;36mtrain\u001b[0;34m(opt, show_number, amp)\u001b[0m\n\u001b[1;32m     38\u001b[0m     \u001b[0mopt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselect_data\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselect_data\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'-'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     39\u001b[0m     \u001b[0mopt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatch_ratio\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mbatch_ratio\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msplit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'-'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 40\u001b[0;31m     \u001b[0mtrain_dataset\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mBatch_Balanced_Dataset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     41\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     42\u001b[0m     \u001b[0mlog\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf'./saved_models/{opt.experiment_name}/log_dataset.txt'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'a'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mencoding\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"utf8\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/content/EasyOCR/trainer/dataset.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, opt)\u001b[0m\n\u001b[1;32m     54\u001b[0m             \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdashed_line\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     55\u001b[0m             \u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdashed_line\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;34m'\\n'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 56\u001b[0;31m             \u001b[0m_dataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0m_dataset_log\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mhierarchical_dataset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mroot\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mopt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtrain_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mopt\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mopt\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mselect_data\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mselected_d\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     57\u001b[0m             \u001b[0mtotal_number_dataset\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_dataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     58\u001b[0m             \u001b[0mlog\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwrite\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0m_dataset_log\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/content/EasyOCR/trainer/dataset.py\u001b[0m in \u001b[0;36mhierarchical_dataset\u001b[0;34m(root, opt, select_data)\u001b[0m\n\u001b[1;32m    136\u001b[0m                 \u001b[0mdataset_list\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mappend\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    137\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 138\u001b[0;31m     \u001b[0mconcatenated_dataset\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mConcatDataset\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdataset_list\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    139\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    140\u001b[0m     \u001b[0;32mreturn\u001b[0m \u001b[0mconcatenated_dataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdataset_log\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/torch/utils/data/dataset.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, datasets)\u001b[0m\n\u001b[1;32m    396\u001b[0m         \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mConcatDataset\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__init__\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    397\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdatasets\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mlist\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdatasets\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 398\u001b[0;31m         \u001b[0;32massert\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdatasets\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'datasets should not be an empty iterable'\u001b[0m  \u001b[0;31m# type: ignore[arg-type]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    399\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0md\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdatasets\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    400\u001b[0m             \u001b[0;32massert\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0md\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mIterableDataset\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"ConcatDataset does not support IterableDataset\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAssertionError\u001b[0m: datasets should not be an empty iterable"]}],"source":["train(opt, amp=False)"]},{"cell_type":"code","source":[""],"metadata":{"id":"DgBv5qem4Cm7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"D7mcquqP4CqF"},"execution_count":null,"outputs":[]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"name":"training EasyOCR.ipynb\"","provenance":[{"file_id":"1TGMFqU8LxWDtuU_cSaHXmFzFcnjiaSrx","timestamp":1651144368704}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}